  ● BalancerV3 EventPool › Base › Events for Vault: 0xbA1333333333a1BA1108E8412f11850A5C319bA9 blocks 27674048 to 27675048 › Check state for block 27674270

    expect(received).toEqual(expected) // deep equality

    - Expected  - 2
    + Received  + 2

    @@ -1,11 +1,11 @@
      Object {
        "0x0657c3467f3bf465fab59b10f1453d665abe507e": Object {
          "aggregateSwapFee": 500000000000000000n,
          "balancesLiveScaled18": Array [
            11715196665919734805n,
    -       84859094532881149865n,
    +       84999778240348444958n,
            160129854000000000000n,
            3965301833426856234156451480n,
            1024370000000000n,
          ],
          "erc4626Rates": Array [
    @@ -29,11 +29,11 @@
          ],
          "supportsUnbalancedLiquidity": true,
          "swapFee": 2500000000000000n,
          "tokenRates": Array [
            1000000000000000000n,
    -       1891573279140000000000n,
    +       1895057123240000000000n,
            1000000000000000000n,
            1000000000000000000n,
            1000000000000000000n,
          ],
          "tokens": Array [

      75 |       compareAmpUpdating(state, expectedState);
      76 |     } else compareAmpStopped(state, expectedState);
    > 77 |   } else expect(state).toEqual(expectedState);
         |                        ^
      78 | }
      79 |
      80 | function compareAmpUpdating(state: PoolStateMap, expectedState: PoolStateMap) {

      at stateCompare (src/dex/balancer-v3/balancer-v3-events.test.ts:77:24)
      at testEventSubscriber (tests/utils-events.ts:102:5)
      at Object.<anonymous> (src/dex/balancer-v3/balancer-v3-events.test.ts:326:11)

  ● BalancerV3 EventPool › Base › Events for Vault: 0xbA1333333333a1BA1108E8412f11850A5C319bA9 blocks 27674048 to 27675048 › Check state for block 27674506

    thrown: "Exceeded timeout of 50000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      323 |         it(`Check state for block ${blockNumber}`, async function () {
      324 |           await testEventSubscriber(
    > 325 |             balancerV3Pool,
          |         ^
      326 |             balancerV3Pool.addressesSubscribed,
      327 |             (_blockNumber: number) =>
      328 |               fetchPoolState(

      at src/dex/balancer-v3/balancer-v3-events.test.ts:325:9
      at src/dex/balancer-v3/balancer-v3-events.test.ts:317:5
      at src/dex/balancer-v3/balancer-v3-events.test.ts:296:3
      at Object.<anonymous> (src/dex/balancer-v3/balancer-v3-events.test.ts:130:1)

  ● BalancerV3 EventPool › Base › Events for Vault: 0xbA1333333333a1BA1108E8412f11850A5C319bA9 blocks 27674048 to 27675048 › Check state for block 27674507

    Invalid JSON RPC response: ""

      at Object.InvalidResponse (node_modules/web3-core-helpers/lib/errors.js:43:16)
      at XMLHttpRequest.request.onreadystatechange (node_modules/web3-providers-http/lib/index.js:95:32)
      at XMLHttpRequest.Object.<anonymous>.XMLHttpRequestEventTarget.dispatchEvent (node_modules/xhr2-cookies/xml-http-request-event-target.ts:44:13)
      at XMLHttpRequest.Object.<anonymous>.XMLHttpRequest._setReadyState (node_modules/xhr2-cookies/xml-http-request.ts:219:8)
      at XMLHttpRequest.Object.<anonymous>.XMLHttpRequest._onHttpRequestError (node_modules/xhr2-cookies/xml-http-request.ts:379:8)
      at ClientRequest.<anonymous> (node_modules/xhr2-cookies/xml-http-request.ts:266:37)

  ● BalancerV3 EventPool › Base › Events for Vault: 0xbA1333333333a1BA1108E8412f11850A5C319bA9 blocks 27674048 to 27675048 › Check state for block 27674570

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 1

    @@ -2,11 +2,11 @@
        "0x0657c3467f3bf465fab59b10f1453d665abe507e": Object {
          "aggregateSwapFee": 500000000000000000n,
          "balancesLiveScaled18": Array [
            11715196665919734805n,
            68026116598504434524n,
    -       180112844000000000000n,
    +       180137854000000000000n,
            3965301833426856234156451480n,
            1024370000000000n,
          ],
          "erc4626Rates": Array [
            null,

      75 |       compareAmpUpdating(state, expectedState);
      76 |     } else compareAmpStopped(state, expectedState);
    > 77 |   } else expect(state).toEqual(expectedState);
         |                        ^
      78 | }
      79 |
      80 | function compareAmpUpdating(state: PoolStateMap, expectedState: PoolStateMap) {

      at stateCompare (src/dex/balancer-v3/balancer-v3-events.test.ts:77:24)
      at testEventSubscriber (tests/utils-events.ts:102:5)
      at Object.<anonymous> (src/dex/balancer-v3/balancer-v3-events.test.ts:326:11)

  ● BalancerV3 EventPool › Base › Events for Vault: 0xbA1333333333a1BA1108E8412f11850A5C319bA9 blocks 27674048 to 27675048 › Check state for block 27674574

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 1

    @@ -1,11 +1,11 @@
      Object {
        "0x0657c3467f3bf465fab59b10f1453d665abe507e": Object {
          "aggregateSwapFee": 500000000000000000n,
          "balancesLiveScaled18": Array [
            11715196665919734805n,
    -       84919757260067190444n,
    +       84940900740244365130n,
            160112484000000000000n,
            3965301833426856234156451480n,
            1024370000000000n,
          ],
          "erc4626Rates": Array [

      75 |       compareAmpUpdating(state, expectedState);
      76 |     } else compareAmpStopped(state, expectedState);
    > 77 |   } else expect(state).toEqual(expectedState);
         |                        ^
      78 | }
      79 |
      80 | function compareAmpUpdating(state: PoolStateMap, expectedState: PoolStateMap) {

      at stateCompare (src/dex/balancer-v3/balancer-v3-events.test.ts:77:24)
      at testEventSubscriber (tests/utils-events.ts:102:5)
      at Object.<anonymous> (src/dex/balancer-v3/balancer-v3-events.test.ts:326:11)

  ● BalancerV3 EventPool › Base › Events for Vault: 0xbA1333333333a1BA1108E8412f11850A5C319bA9 blocks 27674048 to 27675048 › Check state for block 27674788

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 1

    @@ -2,11 +2,11 @@
        "0x0657c3467f3bf465fab59b10f1453d665abe507e": Object {
          "aggregateSwapFee": 500000000000000000n,
          "balancesLiveScaled18": Array [
            11715196665919734805n,
            84919757260067190444n,
    -       161418928000000000000n,
    +       161420563000000000000n,
            3905181404427200737906389542n,
            1024370000000000n,
          ],
          "erc4626Rates": Array [
            null,

      75 |       compareAmpUpdating(state, expectedState);
      76 |     } else compareAmpStopped(state, expectedState);
    > 77 |   } else expect(state).toEqual(expectedState);
         |                        ^
      78 | }
      79 |
      80 | function compareAmpUpdating(state: PoolStateMap, expectedState: PoolStateMap) {

      at stateCompare (src/dex/balancer-v3/balancer-v3-events.test.ts:77:24)
      at testEventSubscriber (tests/utils-events.ts:102:5)
      at Object.<anonymous> (src/dex/balancer-v3/balancer-v3-events.test.ts:326:11)

  ● BalancerV3 EventPool › Base › Events for Vault: 0xbA1333333333a1BA1108E8412f11850A5C319bA9 blocks 27674048 to 27675048 › Check state for block 27674853

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 1

    @@ -1,11 +1,11 @@
      Object {
        "0x0657c3467f3bf465fab59b10f1453d665abe507e": Object {
          "aggregateSwapFee": 500000000000000000n,
          "balancesLiveScaled18": Array [
            11715196665919734805n,
    -       85237176145460372645n,
    +       85237573415654857226n,
            161099705000000000000n,
            3905181404427200737906389542n,
            1024370000000000n,
          ],
          "erc4626Rates": Array [

      75 |       compareAmpUpdating(state, expectedState);
      76 |     } else compareAmpStopped(state, expectedState);
    > 77 |   } else expect(state).toEqual(expectedState);
         |                        ^
      78 | }
      79 |
      80 | function compareAmpUpdating(state: PoolStateMap, expectedState: PoolStateMap) {

      at stateCompare (src/dex/balancer-v3/balancer-v3-events.test.ts:77:24)
      at testEventSubscriber (tests/utils-events.ts:102:5)
      at Object.<anonymous> (src/dex/balancer-v3/balancer-v3-events.test.ts:326:11)

  ● BalancerV3 EventPool › Base › Events for Vault: 0xbA1333333333a1BA1108E8412f11850A5C319bA9 blocks 27674048 to 27675048 › Check state for block 27674886

    expect(received).toEqual(expected) // deep equality

    - Expected  - 2
    + Received  + 2

    @@ -1,11 +1,11 @@
      Object {
        "0x0657c3467f3bf465fab59b10f1453d665abe507e": Object {
          "aggregateSwapFee": 500000000000000000n,
          "balancesLiveScaled18": Array [
            11715196665919734805n,
    -       85144652256662604296n,
    +       85237176145460372645n,
            161099705000000000000n,
            3905181404427200737906389542n,
            1024370000000000n,
          ],
          "erc4626Rates": Array [
    @@ -29,11 +29,11 @@
          ],
          "supportsUnbalancedLiquidity": true,
          "swapFee": 2500000000000000n,
          "tokenRates": Array [
            1000000000000000000n,
    -       1889520000000000000000n,
    +       1891573279140000000000n,
            1000000000000000000n,
            1000000000000000000n,
            1000000000000000000n,
          ],
          "tokens": Array [

      75 |       compareAmpUpdating(state, expectedState);
      76 |     } else compareAmpStopped(state, expectedState);
    > 77 |   } else expect(state).toEqual(expectedState);
         |                        ^
      78 | }
      79 |
      80 | function compareAmpUpdating(state: PoolStateMap, expectedState: PoolStateMap) {

      at stateCompare (src/dex/balancer-v3/balancer-v3-events.test.ts:77:24)
      at testEventSubscriber (tests/utils-events.ts:102:5)
      at Object.<anonymous> (src/dex/balancer-v3/balancer-v3-events.test.ts:326:11)

  ● BalancerV3 EventPool › Base › Events for Vault: 0xbA1333333333a1BA1108E8412f11850A5C319bA9 blocks 27674048 to 27675048 › Check state for block 27674931

    expect(received).toEqual(expected) // deep equality

    - Expected  - 2
    + Received  + 2

    @@ -1,11 +1,11 @@
      Object {
        "0x0657c3467f3bf465fab59b10f1453d665abe507e": Object {
          "aggregateSwapFee": 500000000000000000n,
          "balancesLiveScaled18": Array [
            11715196665919734805n,
    -       85288142927790042223n,
    +       85144652256662604296n,
            161099705000000000000n,
            3905181404427200737906389542n,
            1024370000000000n,
          ],
          "erc4626Rates": Array [
    @@ -29,11 +29,11 @@
          ],
          "supportsUnbalancedLiquidity": true,
          "swapFee": 2500000000000000n,
          "tokenRates": Array [
            1000000000000000000n,
    -       1892830000000000000000n,
    +       1889520000000000000000n,
            1000000000000000000n,
            1000000000000000000n,
            1000000000000000000n,
          ],
          "tokens": Array [

      75 |       compareAmpUpdating(state, expectedState);
      76 |     } else compareAmpStopped(state, expectedState);
    > 77 |   } else expect(state).toEqual(expectedState);
         |                        ^
      78 | }
      79 |
      80 | function compareAmpUpdating(state: PoolStateMap, expectedState: PoolStateMap) {

      at stateCompare (src/dex/balancer-v3/balancer-v3-events.test.ts:77:24)
      at testEventSubscriber (tests/utils-events.ts:102:5)
      at Object.<anonymous> (src/dex/balancer-v3/balancer-v3-events.test.ts:326:11)

Test Suites: 1 failed, 1 total
Tests:       9 failed, 13 skipped, 992 passed, 1014 total
Snapshots:   0 total
Time:        1310.102 s
Ran all test suites matching /paraswap-dex-lib\/src\/dex\/balancer-v3\/balancer-v3-events.test.ts/i with tests matching "Base".
Jest did not exit one second after the test run has completed.

'This usually means that there are asynchronous operations that weren't stopped in your tests. Consider running Jest with `--detectOpenHandles` to troubleshoot this issue.
^C